name: Release
on:
  push:
    branches:
      - main
      - auth
jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.get_version.outputs.package_version }}
      package_file: ${{ steps.get_package.outputs.package_file }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3 
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - id: get_version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "package_version=$VERSION"
          echo "package_version=$VERSION" >> "$GITHUB_ENV"
          echo "package_version=$VERSION" >> "$GITHUB_OUTPUT"
      - id: get_package
        run: |
          npm ci
          npm run build
          PACKAGE=$(npm pack)
          echo "package envvar is $PACKAGE"
          echo "package_file=$PACKAGE"
          echo "package_file=$PACKAGE" >> "$GITHUB_ENV"
          echo "package_file=$PACKAGE" >> "$GITHUB_OUTPUT"
      - uses: actions/upload-artifact@v3
        with:
          name: ntttgz
          path: micahg-ntt-${{ env.package_version }}.tgz
  # publish:
  #   needs: [build]  
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     # Setup .npmrc file to publish to GitHub Packages
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: '18.x'
  #         registry-url: 'https://npm.pkg.github.com'
  #         # Defaults to the user or organization that owns the workflow file
  #         scope: '@micahg'
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: ntttgz
  #     - env:
  #         NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         PACKAGE_FILE: ${{needs.package.outputs.package_file}}
  #       # Using the package file explicitly prevents NPM from rebuilding
  #       # the tgz without any contents
  #       run: npm publish "./$PACKAGE_FILE"
  package:
    needs: [build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
      - name: Download TGZ
        uses: actions/download-artifact@v3
        with:
          name: ntttgz
      - name: Exract Package
        env:
          PACKAGE_FILE: ${{needs.build.outputs.package_file}}
        run: |
          ls -lt
          tar xvf "./$PACKAGE_FILE"
          lt -lt
  # version:
  #   needs: [publish, package]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         git config --global user.name "$GITHUB_ACTOR"
  #         git config --global user.email "$GITHUB_ACTOR@github.com"
  #         npm version patch
  #         VERSION=$(node -p "require('./package.json').version")
  #         BRANCH="release/$VERSION"
  #         echo "Checking out $BRANCH"
  #         git checkout -b "$BRANCH"
  #         git push --set-upstream origin "$BRANCH"